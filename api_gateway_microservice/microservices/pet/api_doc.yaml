swagger: '2.0'
info:
  description: 'This is a sample Pet .'
  version: 2.0.0
  title: NetApp's Microservice Petstore
  contact:
    email: charlie.mietzner@netapp.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: netappPet
basePath: /pet
tags:
  - name: pet
    description: Services related to the store's pet(s)
schemes:
  - http

paths:
  
  /pet:
    post:
      tags:
        - pet
      summary: Registers a new pet(s)
      description: Registers a new pet(s) with the store.
      operationId: update_pet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: A list of one or more pet objects to register with the store.
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
      responses:
        '201':
          description: Successfully registered the new pet(s) with the store. The list of the new pet(s) is returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid pet input.
    get:
      tags:
        - pet
      summary: Returns a list of pets
      description: Returns a list of all pets registered with the store.
      operationId: update_pets
      produces:
        - application/json
      responses:
        '200':
          description: A list of all pets registered with the store.
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'

  /pet/{petId}:
    get:
      tags:
        - pet
      summary: Returns a pet
      description: Returns a single pet registered 
      operationId: find_by_id
      produces:
        - application/json
      parameters:
        - name: petId
          in: path
          description: The id property of pet to return.
          required: true
          type: integer
      responses:
        '200':
          description: Returns the pet registered with provided id property.
          schema:
            $ref: '#/definitions/Pet'
        '404':
          description: The pet was not found.
          
definitions:

  Pet:
    type: object
    properties:
      id:
        description: A unique integer identifier for the pet generated by the server. Cannot be PATCHed or POSTed.
        type: integer
      name:
        type: string
        example: gizmo
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold