definitions:
  Pet:
    properties:
      id:
        description: A unique integer identifier for the pet generated by the server.
          Cannot be PATCHed or POSTed.
        type: integer
      name:
        example: gizmo
        type: string
      status:
        description: pet status in the store
        enum:
        - available
        - pending
        - sold
        type: string
    type: object
  User:
    properties:
      id:
        description: A unique integer identifier for the customer generated by the
          server. Cannot be PATCHed or POSTed.
        type: integer
      name:
        type: string
    type: object
host: 0.0.0.0:8080
info:
  contact:
    email: charlie.mietzner@netapp.com
  description: This is an API-Gateway extendable microservice system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: NetApp's API-Gateway Extendable Microservice
  version: 2.0.0
paths:
  /pet:
    get:
      description: Returns a list of all pets registered with the store.
      operationId: update_pets
      produces:
      - application/json
      responses:
        '200':
          description: A list of all pets registered with the store.
          schema:
            items:
              $ref: '#/definitions/Pet'
            type: array
      summary: Returns a list of pets
      tags:
      - pet
    post:
      consumes:
      - application/json
      description: Registers a new pet(s) with the store.
      operationId: update_pet
      parameters:
      - description: A list of one or more pet objects to register with the store.
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/Pet'
          type: array
      produces:
      - application/json
      responses:
        '201':
          description: Successfully registered the new pet(s) with the store. The
            list of the new pet(s) is returned.
          schema:
            items:
              $ref: '#/definitions/Pet'
            type: array
        '400':
          description: Invalid pet input.
      summary: Registers a new pet(s)
      tags:
      - pet
  /pet/{petId}:
    get:
      description: Returns a single pet registered
      operationId: find_by_id
      parameters:
      - description: The id property of pet to return.
        in: path
        name: petId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: Returns the pet registered with provided id property.
          schema:
            $ref: '#/definitions/Pet'
        '404':
          description: The pet was not found.
      summary: Returns a pet
      tags:
      - pet
  /ui:
    get:
      description: Returns a swagger UI interface
      operationId: ui
      produces:
      - application/json
      responses:
        '200':
          description: A swagger UI representation object.
          schema:
            type: object
      summary: Returns a swagger UI interface
      tags:
      - swagger
  /ui-yaml:
    get:
      description: Returns a swagger UI interface
      operationId: ui_yaml
      produces:
      - application/json
      responses:
        '200':
          description: A string representing the Swagger UI YAML.
          schema:
            type: object
      summary: Returns a swagger UI interface
      tags:
      - swagger
  /user:
    get:
      description: Returns a list of all customers registered with the store.
      operationId: get
      produces:
      - application/json
      responses:
        '200':
          description: A list of all customers registered with the store.
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      summary: Returns a list of customers
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Adds user information to the store's registry.
      operationId: register_customer
      parameters:
      - description: A list of one or more customer's info.
        in: body
        name: body
        required: true
        schema:
          items:
            $ref: '#/definitions/User'
          type: array
      produces:
      - application/json
      responses:
        '201':
          description: Successfully registered the new customer(s) with the store.
            The new customer info is returned.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid customer input.
      summary: Registers one or more new users
      tags:
      - user
  /user/{customerId}:
    get:
      description: Returns a single customer, uniquely identified by their id property.
      operationId: get_user
      parameters:
      - description: The id property of a customer registered with the store.
        in: path
        name: customerId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        '200':
          description: Returns a customer registered with the store under that id.
          schema:
            $ref: '#/definitions/User'
        '404':
          description: A customer with that id was not found.
      summary: Gets a customer by using their id property
      tags:
      - user
schemes:
- http
swagger: '2.0'
tags:
- description: Services related to the store's pet(s)
  name: pet
- description: Services related to Swagger UI
  name: swagger
- description: Services related to the store's users/customers
  name: user
